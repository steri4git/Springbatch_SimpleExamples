<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<description>Example job to get you started. It provides a skeleton for
		a typical batch application.</description>


	<batch:job id="complexJob">
		<batch:split id="split1" task-executor="taskExecutor" next="decision1">
			<batch:flow>
				<batch:step id="step1">
					<batch:tasklet transaction-manager="transactionManager"
						start-limit="100">
						<batch:chunk reader="reader1" writer="writer1"
							commit-interval="1" />
					</batch:tasklet>
				</batch:step>
			</batch:flow>
			<batch:flow>
				<batch:step id="step2">
					<batch:tasklet transaction-manager="transactionManager"
						start-limit="100">
						<batch:chunk reader="reader2" writer="writer2"
							commit-interval="6" />
					</batch:tasklet>
				</batch:step>
			</batch:flow>
		</batch:split>

		<batch:decision id="decision1" decider="decider1">
			<batch:next on="STEP3" to="step3" />
			<batch:next on="STEP4" to="step4" />
		</batch:decision>



		<batch:step id="step3">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="reader1" writer="writer1"
					commit-interval="1" retry-limit="2" skip-limit="2">
					<batch:retryable-exception-classes>
						<batch:include
							class="de.steri.sprinbatch.complex.processing.exception.RetryableException" />
					</batch:retryable-exception-classes>
					<batch:skippable-exception-classes>
						<batch:include
							class="de.steri.sprinbatch.complex.processing.exception.SkipableException" />
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>

		<batch:step id="step4">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="reader1" writer="writer1"
					commit-interval="1" />
			</batch:tasklet>
		</batch:step>

	</batch:job>


	<bean id="decider1" class="de.steri.springbatch.complex.processing.Decider1" /> 
	<bean id="taskExecutor"  class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
</beans>
